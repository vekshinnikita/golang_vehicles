{
    "swagger": "2.0",
    "info": {
        "title": "Golang Vehicle",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/api",
    "paths": {
        "/vehicles": {
            "get": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle"
                ],
                "summary": "Create vehicles",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Sort field example '-name' or 'name'",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter mark",
                        "name": "mark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter mark like",
                        "name": "mark_lk",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter mark",
                        "name": "mark",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter mark like",
                        "name": "mark_lk",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter model",
                        "name": "model",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter model like",
                        "name": "model_lk",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter regNum",
                        "name": "regNum",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter regNum like",
                        "name": "regNum_lk",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter mark",
                        "name": "year",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter year grater than",
                        "name": "year_gt",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Filter year less than",
                        "name": "year_lt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter year between two years example '2000:2005'",
                        "name": "year_btw",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter owner_name",
                        "name": "owner_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter owner_name like",
                        "name": "owner_name_lk",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter owner_surname",
                        "name": "owner_surname",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter owner_surname like",
                        "name": "owner_surname_lk",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter owner_patronymic",
                        "name": "owner_patronymic",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter owner_patronymic like",
                        "name": "owner_patronymic_lk",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/pagination.PaginatedResponse-array_golang_vehicles_Vehicle"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle"
                ],
                "summary": "Create vehicles",
                "parameters": [
                    {
                        "description": "regNums",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.createVehicleInput"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/vehicles/{id}": {
            "delete": {
                "tags": [
                    "vehicle"
                ],
                "summary": "Update vehicles",
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "vehicle"
                ],
                "summary": "Update vehicles",
                "parameters": [
                    {
                        "description": "Partial vehicle fields",
                        "name": "input",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/golang_vehicles.UpdateVehicle"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "golang_vehicles.Owner": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "golang_vehicles.UpdateOwner": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "patronymic": {
                    "type": "string"
                },
                "surname": {
                    "type": "string"
                }
            }
        },
        "golang_vehicles.UpdateVehicle": {
            "type": "object",
            "properties": {
                "mark": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/golang_vehicles.UpdateOwner"
                },
                "regNum": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "golang_vehicles.Vehicle": {
            "type": "object",
            "required": [
                "mark",
                "model",
                "regNum"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "mark": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/golang_vehicles.Owner"
                },
                "regNum": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "handler.createVehicleInput": {
            "type": "object",
            "required": [
                "regNums"
            ],
            "properties": {
                "regNums": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "handler.errorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "pagination.PaginatedResponse-array_golang_vehicles_Vehicle": {
            "type": "object",
            "properties": {
                "current_page": {
                    "type": "integer"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/golang_vehicles.Vehicle"
                    }
                },
                "first_page": {
                    "type": "integer"
                },
                "last_page": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "total_records": {
                    "type": "integer"
                }
            }
        }
    }
}